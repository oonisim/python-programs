Timer unit: 1e-06 s

Total time: 0.001798 s
File: <ipython-input-26-e09f9d94eab8>
Function: create_cooccurrence_matrix at line 1

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     1                                           def create_cooccurrence_matrix(sequence, co_occurrence_vector_size, context_size=3):
     2                                               """
     3                                               Args: 
     4                                                   sequence: word index sequence of the original corpus text
     5                                                   co_occurrence_vector_size: 
     6                                                   context_size: context (N-gram size N) within to check co-occurrences.
     7                                               Returns:
     8                                                   co_occurrence matrix
     9                                               """
    10         1          3.0      3.0      0.2      assert int(context_size %2) == 1
    11                                               
    12         1          3.0      3.0      0.2      n = sequence_size = len(sequence)
    13         1         12.0     12.0      0.7      co_occurrence_matrix = np.zeros((co_occurrence_vector_size, co_occurrence_vector_size), dtype=np.int32)
    14                                           
    15         1          3.0      3.0      0.2      stride = int((context_size - 1)/2 )
    16         1          1.0      1.0      0.1      assert(n > stride), "sequence_size {} is less than/equal to stride {}".format(
    17                                                   n, stride
    18                                               )
    19                                           
    20        13         39.0      3.0      2.2      for position in range(stride, (n-1) - stride +1):        
    21                                                   # --------------------------------------------------------------------------------
    22                                                   # Consider counting a word multiple time, and the word itself for performance.
    23                                                   # e.g. stride=2
    24                                                   # |W|W|W|W|W| If co-occurrences are all same word W at the position, need +4 for W
    25                                                   # |X|X|W|X|X| If co-occurrences are all same word X, need +4 for X
    26                                                   # |X|X|W|Y|Y| If co-occurrences X x 2, Y x 2, then need +2 for X and Y respectively.
    27                                                   # --------------------------------------------------------------------------------
    28                                           
    29                                                   # --------------------------------------------------------------------------------
    30                                                   # Line #   Hits    Time       Per Hit   % Time 
    31                                                   # 32   1864462    5358433.0      2.9     61.5          np.add.at(
    32                                                   # 33    932231     446858.0      0.5      5.1             co_occurrence_matrix,
    33                                                   # 34    932231     463579.0      0.5      5.3             (
    34                                                   # 35    932231     609110.0      0.7      7.0                 sequence[position],
    35                                                   # 36    932231     862299.0      0.9      9.9                 sequence[position-stride : (position+stride) +1]    
    36                                                   # 37                                                      ),
    37                                                   # 38    932231     437542.0      0.5      5.0             1
    38                                                   # 39                                                   )
    39                                                   # --------------------------------------------------------------------------------
    40                                                   # word_id = sequence[position]
    41        24       1335.0     55.6     74.2          np.add.at(
    42        12         17.0      1.4      0.9             co_occurrence_matrix,
    43        12         18.0      1.5      1.0             (
    44        12         36.0      3.0      2.0                 sequence[position],                               # word_id
    45        12         41.0      3.4      2.3                 sequence[position-stride : (position+stride) +1]  # indices to co-occurrence words 
    46                                                      ),
    47        12         19.0      1.6      1.1             1
    48                                                   )
    49                                                   # --------------------------------------------------------------------------------
    50                                           
    51                                               # --------------------------------------------------------------------------------
    52                                               # Compensate the +1 self count of a word at each occurrence.
    53                                               # F(w) (frequency/occurrences of a word in the sequence) has been extra added besides 
    54                                               # the expected (2 * stride) * F(w) times, resulting in (context_size) * F(w).
    55                                               # --------------------------------------------------------------------------------
    56         2        124.0     62.0      6.9      np.fill_diagonal(
    57         1          2.0      2.0      0.1          co_occurrence_matrix,
    58         1        141.0    141.0      7.8          (co_occurrence_matrix.diagonal() - co_occurrence_matrix.sum(axis=1) / context_size)
    59                                               )
    60                                           
    61         1          4.0      4.0      0.2      return co_occurrence_matrix